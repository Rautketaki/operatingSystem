***Write arithmetic calculation program by using case structure.***
#!/bin/bash
echo "Enter operator + -/ * "
read op
echo "Enter 2 numbers"
read a b
case $op in
    +) result=$(($a+$b))
       ;;
    -)result=$(($a-$b))
      ;;
    *)result=$(($a * $b))
     ;;
    /)result=$(($a / $b))
    ;;
esac
echo "$result"
fi
***whether a number is positive or negative***
#!/bin/bash 
echo "enter a number"
read num

if [ $num -gt 0 ]
then

echo "number is positive"
else
echo "Number is negative"
fi
*** Write a program to calc factorial of given no.***
#!/bin/bash
echo "enter a number"
read num
let fact=1;
for ((i=2; i<=num; i++)); do
    fact=$((fact * i))
  done
echo "$fact"
***Check whether a string is palindrome or not***
#!/bin/bash
echo "Enter a String"
read input
reverse=""

len=${#input}
for (( i=$len-1; i>=0; i-- ))
do 
    reverse="$reverse${input:$i:1}"
done
if [ $input == $reverse ]
then
    echo "$input is palindrome"
else
    echo "$input is not palindrome"
fi

***Check whether a number is prime or not***
#!/bin/bash
echo -e "Enter Number : \c"
read n
for((i=2; i<=$n/2; i++))
do
  ans=$(( n%i ))
  if [ $ans -eq 0 ]
  then
    echo "$n is not a prime number."
    exit 0
  fi
done
echo "$n is a prime number."


*** To print reverse of given number.***
echo enter number
read num1
num=0
while [ $num1 -gt 0 ]
do
num=$(expr $num \* 10)
div=$(expr $num1 % 10)
num=$(expr $num + $div)
num1=$(expr $num1 / 10)
done
echo number is $num

***To check and count occurrence of a substring in a string using Command Line Arrgeument***
#!/bin/bash

count_substring_occurrences() {
    local string="$1"
    local substring="$2"

    
    occurrences=$(( ( ${#string} - ${#substring} ) / ${#substring} ))

    echo $occurrences
}

if [ $# -eq 2 ]; then
    input_string="$1"
    search_substring="$2"
else
    echo "Enter a string:"
    read input_string

    echo "Enter a substring:"
    read search_substring
fi

result=$(count_substring_occurrences "$input_string" "$search_substring")

echo "Occurrences of '$search_substring' in '$input_string': $result"

